# Run tests

name: "Test-Build-Release"

on:
    push:
        branches:
            - main
        # Sequence of patterns matched against refs/tags
        tags:
            - v*
    pull_request:

defaults:
    run:
        shell: bash

jobs:
    tests:
        name: "Python ${{ matrix.python-version }} on ${{ matrix.os }}"
        runs-on: "${{ matrix.os }}"

        strategy:
            fail-fast: false
            matrix:
                os:
                    - ubuntu-latest
                    - macos-latest
                    - windows-latest
                python-version:
                    - "3.10"
                    - "3.11"

        steps:
            - name: "Check out the repo"
              uses: "actions/checkout@v3"

            - name: "Set up Python"
              uses: "actions/setup-python@v4"
              with:
                  python-version: "${{ matrix.python-version }}"

            - name: "Install dependencies"
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install tox tox-gh-actions

            - name: "Run tox for ${{ matrix.python-version }}"
              run: |
                  python -m tox

            - name: "Upload coverage data"
              uses: actions/upload-artifact@v3
              with:
                  name: covdata
                  path: .coverage.*

    coverage:
        name: Coverage
        needs: tests
        runs-on: ubuntu-latest
        steps:
            - name: "Check out the repo"
              uses: "actions/checkout@v3"

            - name: "Set up Python"
              uses: "actions/setup-python@v4"
              with:
                  python-version: "3.11"

            - name: "Install dependencies"
              run: |
                  python -m pip install tox tox-gh-actions

            - name: "Download coverage data"
              uses: actions/download-artifact@v3
              with:
                  name: covdata

            - name: "Combine"
              run: |
                  python -m tox -e coverage
                  export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
                  echo "total=$TOTAL" >> $GITHUB_ENV
                  echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY

            - name: "Make badge"
              uses: schneegans/dynamic-badges-action@v1.6.0
              with:
                  # GIST_TOKEN is a GitHub personal access token with scope "gist".
                  auth: ${{ secrets.GIST_TOKEN }}
                  gistID: bc966a7d659af93f31be6b04415b9468 # replace with your real Gist id.
                  filename: covbadge.json
                  label: Coverage
                  message: ${{ env.total }}%
                  minColorRange: 50
                  maxColorRange: 90
                  valColorRange: ${{ env.total }}
    docs:
        runs-on: ubuntu-latest
        needs: [tests, coverage]
        permissions:
            contents: write
        concurrency:
            group: ${{ github.workflow }}-${{ github.ref }}

        steps:
            - name: Checkout repository content
              uses: actions/checkout@v3

            - name: Setup python version
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install sphinx

            - name: Upgrade pip, install package, install requirements, build docs
              run: |
                  pip install --upgrade pip
                  pip install .
                  pip install -r ./docs/requirements.txt
                  pip install sphinx
                  sphinx-build docs ./docs/_build/html/

            - name: Deploy GH Page
              if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
              uses: peaceiris/actions-gh-pages@v3
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: docs/_build/html/

            - name: Upload Docs
              uses: actions/upload-artifact@v1
              with:
                  name: CLS-Python Documentation
                  path: docs/_build/html/
    release:
        runs-on: ubuntu-latest
        needs: [tests, coverage, docs]

        steps:
            - name: Checkout repository content
              uses: actions/checkout@v3

            - name: Setup Python Version
              uses: actions/setup-python@v4
              with:
                  python-version: "3.10"

            - name: Install Requirements
              run: |
                  python -m pip install --upgrade pip
                  python -m pip install --upgrade pip requests
                  python -m pip install -r requirements_dev.txt

            - name: Make Dist
              run: python setup.py sdist bdist_wheel

            - name: Upload Dist
              uses: actions/upload-artifact@v1
              with:
                  name: CLS-Python Distribution
                  path: dist/

            - name: Publish package
              if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
              uses: pypa/gh-action-pypi-publish@release/v1
              with:
                  password: ${{ secrets.PYPI_API_TOKEN }}
